openapi: 3.0.2
info:
  title: EV-Drive Car Dealership API Definition
  description: |
    # About Us
    ***EV-Drive Car Dealership*** is an online dealership with a vast inventory of electric vehicles for sale. Using our APIS, clients can browse vehicle listings and place orders online. 
    # Vehicle classes available
      - Full-sized sedans
      - Compact sedans
      - SUVs
      - Pick-ups
  termsOfService: https://evdrive.com/terms/
  x-custom-info: #doesn't show up in the Swagger interface
    authors:
      - name: Emile Lin
        email: emilelin@hotmail.com
  contact:
    name: API Support
    url: https://evdrive.com/support/
    email: support@evdrive.com
  license:
    name: EV-Drive License
    url: https://www.evdrive.com/en/legal
  version: 0.0.1
externalDocs:
  description: External Documentation
  url: https://example.com
servers:
- url: https://development.evdrive-server.com/v1
  description: Development server
- url: https://development.evdrive-staging.com/v1
  description: Staging server
- url: https://development.evdrive-production.com/v1
  description: Production server
- url: https://{username}.evdrive-production.com:{port}/{version}
  variables: 
    username:
      default: demo
      description: This value is assigned by the service provider.
    port:
      enum:
        - "8443"
        - "443"
      default: "8443"
    version:
      default: v1

security:
  - BasicAuth: []
  - BearerAuth: []
  - ApiKeyAuth: []
  - oAuth2:
    - read
    - write
    - admin
      
tags:
  - name: Vehicle Classes
    description: Operations related to vehicle classes
  - name: Vehicles
    description: Operations related to vehicles for sale
  - name: Orders
    description: Operations related to online orders
    
paths: 
  /classes:
    get: 
      tags: 
       - Vehicle Classes
      summary: Lists all vehicle classes potentially available at EV-Drive
      description: Returns the list of vehicle classes (and their availability) at EV-Drive. A class is considered available if at least one vehicle belonging in it is purchasable on the online market.
      operationId: getClasses
      parameters:
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: The list of vehicle classes (and their availability) at EV-Drive
          content: 
            application/json:
              schema:
                  $ref: "#/components/schemas/Class"
              examples:
               all-classes-data:
                summary: Example of returned data 
                value:
                  - classId: 1
                    vehicleClass: Full-sized sedans
                    available: true
                    stock: 250
                  - classId: 2
                    vehicleClass: Compact sedans
                    available: true
                    stock: 250
                  - classId: 3
                    vehicleClass: SUVs
                    available: true
                    stock: 250  
                  - classId: 4
                    vehicleClass: Pick-ups
                    available: true
                    stock: 250   

        '500':
          $ref: "#/components/responses/InternalServerError"
          
  /classes/{classId}:
    get:
      tags:
      - Vehicle Classes
      summary: Returns stock of vehicles belonging to the queried vehicle class at EV-Drive based on query parameters.
      description: Returns data on one of the four vehicle classes at EV-Drive. Data is updated every 30 minutes.
      operationId: getClassDetails
      parameters:
        - $ref: '#/components/parameters/classIdPathParam'
        - $ref: '#/components/parameters/underPrice'
        - $ref: '#/components/parameters/abovePrice'
        - $ref: '#/components/parameters/underMileage'
        - $ref: '#/components/parameters/aboveMileage'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: The data of the queried vehicle class at EV-Drive.
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Class"
              examples:
                single-class-data:
                  summary: Example of returned data 
                  value:
                      classId: 1
                      vehicleClass: Full-sized sedans
                      available: true
                      stock: 250

        '500':
          $ref: "#/components/responses/InternalServerError"
          
  /cars:
     get: 
      tags:
      - Vehicles
      summary: Lists all available vehicles at EV-Drive based on query parameters.
      description: Returns the list of available vehicles at EV-Drive based on query parameters. Data is updated every 30 minutes.
      operationId: getCars
      parameters: 
        - $ref: '#/components/parameters/numberReturned' 
        - $ref: '#/components/parameters/underPrice'
        - $ref: '#/components/parameters/abovePrice'
        - $ref: '#/components/parameters/underMileage'
        - $ref: '#/components/parameters/aboveMileage'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: The list of all available vehicles at EV-Drive based on query parameters
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
              examples:
               all-cars-data:
                summary: Example of returned data for all cars
                value:
                  - carId: 1
                    vehicleMake: Tesla Model 3
                    year: 2019
                    vehicleClass: Full-sized sedan
                    available: true
                    price: 40,000
                    mileage: 45,456
                  - carId: 2
                    vehicleMake: Tesla Model S
                    year: 2020
                    vehicleClass: Full-sized sedan
                    available: true
                    price: 90,000
                    mileage: 25,346
                  - carId: 3
                    vehicleMake: Tesla Model Y
                    year: 2020
                    vehicleClass: SUV
                    available: true
                    price: 56,000
                    mileage: 80,346  
        '500':
          $ref: "#/components/responses/InternalServerError"
          
  /cars/{carId}:
    get: 
      tags:
      - Vehicles
      summary: Returns all details about the queried vehicle
      description: Returns the details of the queried vehicle class at EV-Drive
      operationId: getCarDetails
      parameters:
        - $ref: '#/components/parameters/carIdPathParam'
      responses:
        '200':
          description: Returns the details of the queried vehicle class at EV-Drive
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
              examples:
               single-car-data:
                summary: Example of returned data for a single car
                value:
                    carId: 1
                    vehicleMake: Tesla Model 3
                    year: 2019
                    vehicleClass: Full-sized sedan
                    available: true
                    price: 40,000
                    mileage: 45,456
        '500':
          $ref: "#/components/responses/InternalServerError"
    
  /orders:
    post: 
      tags:
      - Orders
      summary: Create an online vehicle order
      description: Post order details to EV-Drive Car Dealership for processing and shipping
      operationId: postOrderDetails
      requestBody:
        content:
          application/json:
            schema: 
              type: object 
              properties:
                car:
                  $ref: "#/components/schemas/Car"
                address:
                  $ref: "#/components/schemas/Address"
            example:
               car:
                    carId: 1
                    vehicleMake: Tesla Model 3
                    year: 2019
                    vehicleClass: Full-sized sedan
                    available: true
                    price: 40,000
                    mileage: 45,456
               address:
                    addressLine: 300 Simpson Road
                    city: San Francisco
                    state: California
                    zipcode: 43032
      responses:
        '201': 
          description: Order created successfully
          content:
           application/json:
            schema:
              type: object
              properties: 
                orderId:
                  type: integer
                estimatedShipment:
                  type: string
                orderDate:
                  type: string
                  format: date
          links:
            GetOrderByOrderId:
              $ref: '#/components/links/GetOrderByOrderId' #attach to the correct "link" component
        '500':
          $ref: "#/components/responses/InternalServerError"
    put: 
      tags:
      - Orders
      summary: Update existing online order
      description: Update order details to EV-Drive Car Dealership for processing and shipping
      operationId: updateOrderDetails
      requestBody:
        content:
          application/json:
            schema: 
              type: object 
              properties:
                orderId: 
                  type: integer
                car:
                  $ref: "#/components/schemas/Car"
                address:
                  $ref: "#/components/schemas/Address"
            example:
               car:
                    carId: 1
                    vehicleMake: Tesla Model 3
                    year: 2019
                    vehicleClass: Full-sized sedan
                    available: true
                    price: 40,000
                    mileage: 45,456
               address:
                    addressLine: 300 Simpson Road
                    city: San Francisco
                    state: California
                    zipcode: 43032
      responses:
        '200': 
          description: Order details updated successfully
          content:
           application/json:
            schema:
              type: object
              properties: 
                orderId:
                  type: integer
                estimatedShipment:
                  type: string
                orderDate:
                  type: string
                  format: date
        '500':
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
      - Orders
      summary: Delete existing online order
      description: Delete order details from EV-Drive Car Dealership
      operationId: deleteOrderDetails
      parameters:
        - $ref: '#/components/parameters/orderIdQueryParam'
      responses:
        '204': 
          description: Order details cancelled successfully
          content:
           application/json:
            schema:
              type: object
              properties: 
                orderId:
                  type: integer
                estimatedShipment:
                  type: string
                orderDate:
                  type: string
                  format: date
        '500':
          $ref: "#/components/responses/InternalServerError"
          
    get:
      tags:
      - Orders
      summary: Get details of an existing online order.
      description: Get order details from EV-Drive Car Dealership.
      operationId: getOrderDetails
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
        - name: fetch
          in: query
          required: true
          schema:
            type: string
            enum:
              - summary
              - details
      responses:
        "200":
          description: Returns order details
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/orderSummary"
                  - $ref: "#/components/schemas/orderAddress"
              example:
                car:
                  carId: 1
                  vehicleMake: Tesla Model 3
                  year: 2019
                  vehicleClass: Full-sized sedan
                  available: true
                  price: 40,000
                  mileage: 45,456 
        '500':
          $ref: "#/components/responses/InternalServerError"
          
  /orderConfirmation:
    post:
      tags:
        - Orders
      summary: Create a final confirmation to online vehicle order
      description: Post final order details to EV-Drive Car Dealership for processing and shipping.
      operationId: confirmOrder
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                car:
                  type: object
                  oneOf:
                    - $ref: "#/components/schemas/Buy"
                    - $ref: "#/components/schemas/Lease"
                address:
                  $ref: "#/components/schemas/Address"
              required:
                - car
                - address
            example:
               car:
                    carId: 1
                    vehicleMake: Tesla Model 3
                    year: 2019
                    vehicleClass: Full-sized sedan
                    available: true
                    price: 40,000
                    mileage: 45,456
                    lease: 3 years
               address:
                    addressLine: 300 Simpson Road
                    city: San Francisco
                    state: California
                    zipcode: 43032                
      responses:
        '201': 
          description: Order created successfully
          content:
           application/json:
            schema:
              type: object
              properties: 
                orderId:
                  type: integer
                estimatedShipment:
                  type: string
                orderDate:
                  type: string
                  format: date
        '500':
          $ref: "#/components/responses/InternalServerError"
  
  /orders/{orderId}:
    get:
      tags:
      - Orders
      summary: Get details of an existing online order.
      description: Get order details from EV-Drive Car Dealership.
      operationId: getOrderDetailsUsingPathParam
      deprecated: true
      parameters:
        - $ref: "#/components/parameters/orderIdPathParam"
        - name: fetch
          in: query
          required: true
          schema:
            type: string
            enum:
              - summary
              - details
      responses:
        "200":
          description: Returns order details
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/orderSummary"
                  - $ref: "#/components/schemas/orderAddress"
              example:
                car:
                  carId: 1
                  vehicleMake: Tesla Model 3
                  year: 2019
                  vehicleClass: Full-sized sedan
                  available: true
                  price: 40,000
                  mileage: 45,456
        '500':
          $ref: "#/components/responses/InternalServerError"
          
components:
  parameters:
  
    classIdPathParam:
      name: classId
      in: path
      description: Enter a number from 1 to 4. Each number represents a vehicle class.
      required: true
      schema: 
        type: integer
        minimum: 1
        maximum: 4
      examples: 
        Full-sized sedans: 
          value: 1
        Compact sedans:
          value: 2
        SUVs:
          value: 3
        Pick-ups:
          value: 4
    underPrice:
      name: underP
      in: query
      description: Enter a number as a price; only vehicles under the specified price will be returned. 
      schema:
        type: number
      example: 40,000
    abovePrice:
      name: aboveP
      in: query
      description: Enter a number as a price; only vehicles above the specified price will be returned.
      schema:
        type: number
      example: 60,000
    underMileage:
      name: underM
      in: query
      description: Enter a number as a mileage; only vehicles under the specified mileage will be returned. 
      schema:
        type: number
      example: 25,000
    aboveMileage:
      name: aboveM
      in: query
      description: Enter a number as a mileage; only vehicles above the specified mileage will be returned. 
      schema:
        type: number
      example: 12,500 
    lang:
      name: lang
      in: query
      description: Set the response to a different language. 
      schema:
        type: string
        enum: [cn,en,fr]
        default: "en"
        
    numberReturned:
      name: number
      in: query
      description: Enter how many vehicles you would like returned. Most recently added or updated listings will be returned first. The minimum number that can be entered is 1; the maximum is 500.
      required: true
      schema: 
        type: integer
        minimum: 1
        maximum: 500
      example: 20   
    
    
    carIdQueryParam:
      name: carId
      in: query
      schema: 
        type: integer
        minimum: 1
        maximum: 1000
      example: 1
    carIdPathParam:
      name: carId
      in: path
      required: true
      schema: 
        type: integer
        minimum: 1
        maximum: 1000
      example: 1
    orderIdQueryParam:
      name: orderId
      in: query
      required: true
      schema:
        type: integer
    orderIdPathParam:
      name: orderId
      in: path
      required: true
      schema:
        type: integer
        
  schemas:
  
    Address:
      type: object
      properties: 
        addressLine:
          type: string
          description: The address of the client
        city:
          type: string
          description: The city in which the client reside
        state:
          type: string
          description: The state in which the client resides
        zipcode:
          type: string
          description: The zip code of the client's home address
      required: [addressLine, city, state, zipcode]
      
    Class:
      title: Class
      type: object
      properties:
        classId:
          type: integer
        vehicleClass: 
          type: string
          description: The name of the vehicle class
        available: 
          type: boolean
          description: Whether vehicles of this class are available for sale
        stock:
          type: integer
          description: How many vehicles of this class are available
          
    Buy:
      title: Buy
      allOf:
        - $ref: "#/components/schemas/Car"
        - type: object
          properties: 
            buy:
              type: string 
              enum:
                - Financing
                - Cash
                
    Lease:
      title: Lease
      allOf:
        - $ref: "#/components/schemas/Car"
        - type: object
          properties: 
            lease:
              type: string 
              enum:
                - 3 years
                - 4 years
                - 5 years
                - 6 years
                
    orderSummary: 
      type: object
      properties:
        car:
          $ref: "#/components/schemas/Car"
          
    orderAddress: 
      type: object
      properties:
        car:
          $ref: "#/components/schemas/Address"
     
          
    Car:
      title: Vehicle
      type: object
      properties: 
        carId: 
          type: integer
        vehicleMake: 
          type: string
          description: Make and model of the vehicle to order
        year:
          type: number
          description: Year of manufacture
        vehicleClass:
          type: string
          description: The vehicle class that the vehicle is part of
        price:
          type: number
          description: The price of this vehicle
        mileage:
          type: number
          description: The mileage of this vehicle
          
  responses:
    InternalServerError:
      description: An error occured while processing the request. Please contact support evdrive@support.com.
  
  links:
    GetOrderByOrderId:
      description: The order ID value returned in the response can be used as an input parameter in `GET/orders`.
      operationId: getOrderDetails #this should be the same operation ID as the API that is linked to (GET/orders)
      parameters:
        orderId: '$response.body#/orderId' #Should be the same "orderId" parameter as the one in GET/orders. In this case, it was re-directed to the OrderIdQueryParam component. 
        
    
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic 
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    oAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/api/oauth.access
          scopes:
            read: Read only access
            write: Read Write access
            admin: Admin access 
      
  
